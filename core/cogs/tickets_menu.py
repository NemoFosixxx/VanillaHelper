import disnake
import logging
import yaml
from disnake.ext import commands
import asyncio

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–¥–≥—Ä—É–∑ –∫–æ–Ω—Ñ–∏–≥–æ–≤
file_path = 'config.yml'
with open(file_path, 'r') as file:
    config = yaml.safe_load(file)

class MenuForming(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.whitelist_support = config.get('whitelist_role_id')

    @commands.slash_command(description="–°–æ–∑–¥–∞—ë—Ç —ç–º–±–µ–¥ —Å –≤—ã–ø–∞–¥–∞—é—â–∏–º –º–µ–Ω—é –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏–π", name="menu")
    @commands.has_role(config.get('bot_admin'))
    async def setup_menu(self, inter: disnake.ApplicationCommandInteraction):
        embed = disnake.Embed(
            title="–û—Ç–∫—Ä—ã—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ",
            description="–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –º–µ–Ω—é –Ω–∏–∂–µ.",
            color=disnake.Color(0x7857be)
        )
        embed.set_image(url="https://cdn.discordapp.com/attachments/415752039713472513/1288380944717447178/Frame_18_1.png?ex=670228c2&is=6700d742&hm=387109f6dcd11a5df2995486fcbab12dbd9e33bad1f724730553ad45487d6487&")

        select_menu = disnake.ui.Select(
            custom_id="complaint_menu",
            options=[
                disnake.SelectOption(label="–ñ–∞–ª–æ–±–∞ –Ω–∞ –∏–≥—Ä–æ–∫–∞", value="complaint_player", description="–ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –∏–≥—Ä–æ–∫–∞", emoji="‚ö†Ô∏è"),
                disnake.SelectOption(label="–ñ–∞–ª–æ–±–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é", value="complaint_admin", description="–ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é", emoji="‚ö†Ô∏è"),
                disnake.SelectOption(label="–í–æ–ø—Ä–æ—Å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏", value="admin_question", description="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏", emoji="‚ùì"),
                disnake.SelectOption(label="–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é", value="suggestion", description="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏—è", emoji="üí°")
            ],
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è",
            min_values=1,
            max_values=1
        )

        await inter.send(embed=embed, components=[disnake.ui.ActionRow(select_menu)])

    @commands.Cog.listener()
    async def on_message_interaction(self, inter: disnake.MessageInteraction):
        if inter.data.custom_id == "complaint_menu":
            selected_option = inter.data.values[0]
            
            if selected_option == "complaint_player":
                modal = disnake.ui.Modal(
                    title="–ñ–∞–ª–æ–±–∞ –Ω–∞ –∏–≥—Ä–æ–∫–∞",
                    custom_id="complaint_player",
                    components=[
                        disnake.ui.TextInput(
                            label="–í–∞—à –Ω–∏–∫ –≤ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç",
                            custom_id="nickname",
                            style=disnake.TextInputStyle.short,
                            max_length=16,
                            required=True
                        ),
                        disnake.ui.TextInput(
                            label="–ù–∏–∫ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è",
                            custom_id="griefer",
                            style=disnake.TextInputStyle.short,
                            required=True
                        ),
                        disnake.ui.TextInput(
                            label="–ü—É–Ω–∫—Ç –Ω–∞—Ä—É—à–µ–Ω–∏—è",
                            custom_id="point",
                            style=disnake.TextInputStyle.paragraph,
                            required=True
                        ),
                        disnake.ui.TextInput(
                            label="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è",
                            custom_id="description",
                            style=disnake.TextInputStyle.paragraph,
                            required=True
                        )
                    ]
                )
                await inter.response.send_modal(modal)

            elif selected_option == "complaint_admin":
                modal = disnake.ui.Modal(
                    title="–ñ–∞–ª–æ–±–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é",
                    custom_id="complaint_admin",
                    components=[
                        disnake.ui.TextInput(
                            label="–í–∞—à –Ω–∏–∫ –≤ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç",
                            custom_id="nickname",
                            style=disnake.TextInputStyle.short,
                            max_length=16,
                            required=True
                        ),
                        disnake.ui.TextInput(
                            label="–ù–∏–∫ –Ω–∞—Ä—É—à–∏–≤—à–µ–≥–æ –∞–¥–º–∏–Ω–∞",
                            custom_id="admin_nickname",
                            style=disnake.TextInputStyle.short,
                            required=True
                        ),
                        disnake.ui.TextInput(
                            label="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è",
                            custom_id="description",
                            style=disnake.TextInputStyle.paragraph,
                            required=True
                        )
                    ]
                )
                await inter.response.send_modal(modal)

            elif selected_option == "admin_question":
                modal = disnake.ui.Modal(
                    title="–í–æ–ø—Ä–æ—Å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏",
                    custom_id="admin_question",
                    components=[
                        disnake.ui.TextInput(
                            label="–í–∞—à –Ω–∏–∫ –≤ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç",
                            custom_id="nickname",
                            style=disnake.TextInputStyle.short,
                            max_length=16,
                            required=True
                        ),
                        disnake.ui.TextInput(
                            label="–í–∞—à –≤–æ–ø—Ä–æ—Å",
                            custom_id="question",
                            style=disnake.TextInputStyle.paragraph,
                            required=True
                        )
                    ]
                )
                await inter.response.send_modal(modal)

            elif selected_option == "suggestion":
                modal = disnake.ui.Modal(
                    title="–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é",
                    custom_id="suggestion",
                    components=[
                        disnake.ui.TextInput(
                            label="–í–∞—à –Ω–∏–∫ –≤ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç",
                            custom_id="nickname",
                            style=disnake.TextInputStyle.short,
                            max_length=16,
                            required=True
                        ),
                        disnake.ui.TextInput(
                            label="–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
                            custom_id="suggest",
                            style=disnake.TextInputStyle.paragraph,
                            required=True
                        )
                    ]
                )
                await inter.response.send_modal(modal)
                
    @commands.Cog.listener()
    async def on_modal_submit(self, inter: disnake.ModalInteraction):
        if inter.custom_id == "complaint_player":
            nickname = inter.text_values["nickname"]
            griefer = inter.text_values["griefer"]
            point = inter.text_values["point"]
            description = inter.text_values["description"]
            user = inter.user
            self.user_button_id = str(user.id)
            self.button_nickname = nickname
            category = disnake.utils.get(inter.guild.categories, name="–ñ–∞–ª–æ–±—ã –Ω–∞ –∏–≥—Ä–æ–∫–æ–≤")
            if category is None:
                category = await inter.guild.create_category("–ñ–∞–ª–æ–±—ã –Ω–∞ –∏–≥—Ä–æ–∫–æ–≤")
            whitelist_role = inter.guild.get_role(config.get('whitelist_role_id'))
            
            overwrites = {
                inter.guild.default_role: disnake.PermissionOverwrite(read_messages=False),
                user: disnake.PermissionOverwrite(
                    read_messages=True, send_messages=True, add_reactions=True, 
                    embed_links=True, attach_files=True, read_message_history=True,
                    external_emojis=True
                ),
                whitelist_role: disnake.PermissionOverwrite(
                    read_messages=True, send_messages=True, add_reactions=True, 
                    embed_links=True, attach_files=True, read_message_history=True,
                    external_emojis=True
                )
            }

            complaint_player_channel = await inter.guild.create_text_channel(name=f'ticket-{user.name}', category=category, overwrites=overwrites)
            complaint_player_channel_id = complaint_player_channel.id
            
            await inter.send(f'–¢–≤–æ–π —Ç–∏–∫–µ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω! <#{complaint_player_channel_id}>', ephemeral=True)
            await complaint_player_channel.send(f'{user.mention} <@&{self.whitelist_support}>', delete_after=1)
            
            complaint_player_embed = disnake.Embed(
                title='–ñ–∞–ª–æ–±–∞ –Ω–∞ –∏–≥—Ä–æ–∫–∞',
                description = "–í–∞—à —Ç–∏–∫–µ—Ç —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω! –û–±—ã—á–Ω–æ —ç—Ç–æ –Ω–µ –∑–∞–Ω–∏–º–∞–µ—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.",
                color=disnake.Color(0x7857be) 
            )
            complaint_player_embed.add_field(name="–ù–∏–∫ –≤ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ", value=nickname, inline=False)
            complaint_player_embed.add_field(name="–ù–∏–∫ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è", value=griefer, inline=False)
            complaint_player_embed.add_field(name="–ü—É–Ω–∫—Ç", value=point, inline=False)
            complaint_player_embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏", value=description, inline=False)
            message = await complaint_player_channel.send(embed=complaint_player_embed, components=[
                disnake.ui.Button(label="–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç", custom_id="close_ticket_menu", style=disnake.ButtonStyle.danger)
            ])
            await message.pin()
        
        elif inter.custom_id == "complaint_admin":
            nickname = inter.text_values["nickname"]
            admin_nickname = inter.text_values["admin_nickname"]
            description = inter.text_values["description"]
            user = inter.user
            self.user_button_id = str(user.id)
            self.button_nickname = nickname
            category = disnake.utils.get(inter.guild.categories, name="–ñ–∞–ª–æ–±—ã –Ω–∞ –∞–¥–º–∏–Ω–æ–≤")
            if category is None:
                category = await inter.guild.create_category("–ñ–∞–ª–æ–±—ã –Ω–∞ –∞–¥–º–∏–Ω–æ–≤")
            whitelist_role = inter.guild.get_role(config.get('whitelist_role_id'))
            
            overwrites = {
                inter.guild.default_role: disnake.PermissionOverwrite(read_messages=False),
                user: disnake.PermissionOverwrite(
                    read_messages=True, send_messages=True, add_reactions=True, 
                    embed_links=True, attach_files=True, read_message_history=True,
                    external_emojis=True
                ),
                whitelist_role: disnake.PermissionOverwrite(
                    read_messages=True, send_messages=True, add_reactions=True, 
                    embed_links=True, attach_files=True, read_message_history=True,
                    external_emojis=True
                )
            }

            complaint_admin_channel = await inter.guild.create_text_channel(name=f'ticket-{user.name}', category=category, overwrites=overwrites)
            complaint_admin_channel_id = complaint_admin_channel.id
            
            await inter.send(f'–¢–≤–æ–π —Ç–∏–∫–µ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω! <#{complaint_admin_channel_id}>', ephemeral=True)
            await complaint_admin_channel.send(f'{user.mention} <@&{self.whitelist_support}>', delete_after=1)
            
            complaint_admin_embed = disnake.Embed(
                title='–ñ–∞–ª–æ–±–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞',
                description = "–í–∞—à —Ç–∏–∫–µ—Ç —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω! –û–±—ã—á–Ω–æ —ç—Ç–æ –Ω–µ –∑–∞–Ω–∏–º–∞–µ—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.",
                color=disnake.Color(0x7857be) 
            )
            complaint_admin_embed.add_field(name="–ù–∏–∫ –≤ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ", value=nickname, inline=False)
            complaint_admin_embed.add_field(name="–ù–∏–∫ –∞–¥–º–∏–Ω–∞", value=admin_nickname, inline=False)
            complaint_admin_embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏", value=description, inline=False)
            message = await complaint_admin_channel.send(embed=complaint_admin_embed, components=[
                disnake.ui.Button(label="–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç", custom_id="close_ticket_menu", style=disnake.ButtonStyle.danger)
            ])
            await message.pin()
        
        elif inter.custom_id == "admin_question":
            nickname = inter.text_values["nickname"]
            question = inter.text_values["question"]
            user = inter.user
            self.user_button_id = str(user.id)
            self.button_nickname = nickname
            category = disnake.utils.get(inter.guild.categories, name="–í–æ–ø—Ä–æ—Å—ã")
            if category is None:
                category = await inter.guild.create_category("–í–æ–ø—Ä–æ—Å—ã")
            whitelist_role = inter.guild.get_role(config.get('whitelist_role_id'))
            
            overwrites = {
                inter.guild.default_role: disnake.PermissionOverwrite(read_messages=False),
                user: disnake.PermissionOverwrite(
                    read_messages=True, send_messages=True, add_reactions=True, 
                    embed_links=True, attach_files=True, read_message_history=True,
                    external_emojis=True
                ),
                whitelist_role: disnake.PermissionOverwrite(
                    read_messages=True, send_messages=True, add_reactions=True, 
                    embed_links=True, attach_files=True, read_message_history=True,
                    external_emojis=True
                )
            }

            question_channel = await inter.guild.create_text_channel(name=f'ticket-{user.name}', category=category, overwrites=overwrites)
            question_channel_id = question_channel.id
            await inter.send(f'–¢–≤–æ–π —Ç–∏–∫–µ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω! <#{question_channel_id}>', ephemeral=True)
            await question_channel.send(f'{user.mention} <@&{self.whitelist_support}>', delete_after=1)
            
            question_embed = disnake.Embed(
                title="–í–æ–ø—Ä–æ—Å –∫ –∞–¥–º–∏–Ω–∞–º",
                description= "–í–∞—à –≤–æ–ø—Ä–æ—Å —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω! –û–±—ã—á–Ω–æ —ç—Ç–æ –Ω–µ –∑–∞–Ω–∏–º–∞–µ—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.",
                color=disnake.Color(0x7857be)
            )
            question_embed.add_field(name="–ù–∏–∫ –≤ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ", value=nickname, inline=False)
            question_embed.add_field(name="–í–æ–ø—Ä–æ—Å", value=question, inline=False)
            message = await question_channel.send(embed=question_embed, components=[
                disnake.ui.Button(label="–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç", custom_id="close_ticket_menu", style=disnake.ButtonStyle.danger)
            ])
            await message.pin()
        
        elif inter.custom_id == "suggestion":
            nickname = inter.text_values["nickname"]
            suggest = inter.text_values["suggest"]
            user = inter.user
            self.user_button_id = str(user.id)
            self.button_nickname = nickname
            category = disnake.utils.get(inter.guild.categories, name="–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
            if category is None:
                category = await inter.guild.create_category("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
            whitelist_role = inter.guild.get_role(config.get('whitelist_role_id'))
            
            overwrites = {
                inter.guild.default_role: disnake.PermissionOverwrite(read_messages=False),
                user: disnake.PermissionOverwrite(
                    read_messages=True, send_messages=True, add_reactions=True, 
                    embed_links=True, attach_files=True, read_message_history=True,
                    external_emojis=True
                ),
                whitelist_role: disnake.PermissionOverwrite(
                    read_messages=True, send_messages=True, add_reactions=True, 
                    embed_links=True, attach_files=True, read_message_history=True,
                    external_emojis=True
                )
            }
            suggestion_channel = await inter.guild.create_text_channel(name=f'ticket-{user.name}', category=category, overwrites=overwrites)
            suggestion_channel_id = suggestion_channel.id
            await inter.send(f'–¢–≤–æ–π —Ç–∏–∫–µ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω! <#{suggestion_channel_id}>', ephemeral=True)
            await suggestion_channel.send(f'{user.mention} <@&{self.whitelist_support}>', delete_after=1)
            
            suggestion_embed = disnake.Embed(
                title="–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
                description = "–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ! –û–±—ã—á–Ω–æ —ç—Ç–æ –Ω–µ –∑–∞–Ω–∏–º–∞–µ—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.",
                color=disnake.Color(0x7857be)
            )
            suggestion_embed.add_field(name="–ù–∏–∫ –≤ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ", value=nickname, inline=False)
            suggestion_embed.add_field(name="–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", value=suggest, inline=False)
            message = await suggestion_channel.send(embed=suggestion_embed, components=[
                disnake.ui.Button(label="–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç", custom_id="close_ticket_menu", style=disnake.ButtonStyle.danger)
            ])
            await message.pin()
            
    @commands.Cog.listener()
    async def on_button_click(self, inter: disnake.MessageInteraction):
        try:
            if inter.component.custom_id == "close_ticket_menu":
                whitelist_role_id = config.get('whitelist_role_id')
                if any(role.id == int(whitelist_role_id) for role in inter.user.roles):
                    user = inter.user.name
                    channel = inter.channel.name
                    cmd_channel = self.bot.get_channel(config.get('alert_channel'))
                    await cmd_channel.send(f"–¢–∏–∫–µ—Ç {channel} –±—ã–ª `–∑–∞–∫—Ä—ã—Ç` —Å–ª–µ–¥—É—é—â–∏–º –∞–¥–º–∏–Ω–æ–º: {user}")
                    await inter.send("–¢–∏–∫–µ—Ç –±—É–¥–µ—Ç —É–¥–∞–ª—ë–Ω —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...")
                    await asyncio.sleep(3)

                    await inter.channel.delete()
                else:
                    await inter.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏", ephemeral=True)
        except Exception as e:
            logger.error(f"Error in on_button_click: {e}")
            await inter.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è", ephemeral=True)

def setup(bot: commands.Bot):
    bot.add_cog(MenuForming(bot))
